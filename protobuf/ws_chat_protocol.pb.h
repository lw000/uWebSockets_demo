// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ws_chat_protocol.proto

#ifndef PROTOBUF_ws_5fchat_5fprotocol_2eproto__INCLUDED
#define PROTOBUF_ws_5fchat_5fprotocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ws_chat_protocol {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_ws_5fchat_5fprotocol_2eproto();
void protobuf_InitDefaults_ws_5fchat_5fprotocol_2eproto();
void protobuf_AssignDesc_ws_5fchat_5fprotocol_2eproto();
void protobuf_ShutdownFile_ws_5fchat_5fprotocol_2eproto();

class ws_msg_chat_replay;
class ws_msg_chat_request;
class ws_msg_connected;
class ws_msg_error;

// ===================================================================

class ws_msg_connected : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ws_chat_protocol.ws_msg_connected) */ {
 public:
  ws_msg_connected();
  virtual ~ws_msg_connected();

  ws_msg_connected(const ws_msg_connected& from);

  inline ws_msg_connected& operator=(const ws_msg_connected& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ws_msg_connected& default_instance();

  static const ws_msg_connected* internal_default_instance();

  void Swap(ws_msg_connected* other);

  // implements Message ----------------------------------------------

  inline ws_msg_connected* New() const { return New(NULL); }

  ws_msg_connected* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ws_msg_connected& from);
  void MergeFrom(const ws_msg_connected& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ws_msg_connected* other);
  void UnsafeMergeFrom(const ws_msg_connected& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 time = 1;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // optional int32 rid = 2;
  void clear_rid();
  static const int kRidFieldNumber = 2;
  ::google::protobuf::int32 rid() const;
  void set_rid(::google::protobuf::int32 value);

  // optional int32 uid = 3;
  void clear_uid();
  static const int kUidFieldNumber = 3;
  ::google::protobuf::int32 uid() const;
  void set_uid(::google::protobuf::int32 value);

  // optional string msg = 4;
  void clear_msg();
  static const int kMsgFieldNumber = 4;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:ws_chat_protocol.ws_msg_connected)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int32 rid_;
  ::google::protobuf::int32 uid_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_ws_5fchat_5fprotocol_2eproto_impl();
  friend void  protobuf_AddDesc_ws_5fchat_5fprotocol_2eproto_impl();
  friend void protobuf_AssignDesc_ws_5fchat_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_ws_5fchat_5fprotocol_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ws_msg_connected> ws_msg_connected_default_instance_;

// -------------------------------------------------------------------

class ws_msg_error : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ws_chat_protocol.ws_msg_error) */ {
 public:
  ws_msg_error();
  virtual ~ws_msg_error();

  ws_msg_error(const ws_msg_error& from);

  inline ws_msg_error& operator=(const ws_msg_error& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ws_msg_error& default_instance();

  static const ws_msg_error* internal_default_instance();

  void Swap(ws_msg_error* other);

  // implements Message ----------------------------------------------

  inline ws_msg_error* New() const { return New(NULL); }

  ws_msg_error* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ws_msg_error& from);
  void MergeFrom(const ws_msg_error& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ws_msg_error* other);
  void UnsafeMergeFrom(const ws_msg_error& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 time = 1;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // optional int32 code = 2;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // optional string msg = 3;
  void clear_msg();
  static const int kMsgFieldNumber = 3;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:ws_chat_protocol.ws_msg_error)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int32 code_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_ws_5fchat_5fprotocol_2eproto_impl();
  friend void  protobuf_AddDesc_ws_5fchat_5fprotocol_2eproto_impl();
  friend void protobuf_AssignDesc_ws_5fchat_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_ws_5fchat_5fprotocol_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ws_msg_error> ws_msg_error_default_instance_;

// -------------------------------------------------------------------

class ws_msg_chat_request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ws_chat_protocol.ws_msg_chat_request) */ {
 public:
  ws_msg_chat_request();
  virtual ~ws_msg_chat_request();

  ws_msg_chat_request(const ws_msg_chat_request& from);

  inline ws_msg_chat_request& operator=(const ws_msg_chat_request& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ws_msg_chat_request& default_instance();

  static const ws_msg_chat_request* internal_default_instance();

  void Swap(ws_msg_chat_request* other);

  // implements Message ----------------------------------------------

  inline ws_msg_chat_request* New() const { return New(NULL); }

  ws_msg_chat_request* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ws_msg_chat_request& from);
  void MergeFrom(const ws_msg_chat_request& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ws_msg_chat_request* other);
  void UnsafeMergeFrom(const ws_msg_chat_request& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 time = 1;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // optional int32 rid = 2;
  void clear_rid();
  static const int kRidFieldNumber = 2;
  ::google::protobuf::int32 rid() const;
  void set_rid(::google::protobuf::int32 value);

  // optional int32 from = 3;
  void clear_from();
  static const int kFromFieldNumber = 3;
  ::google::protobuf::int32 from() const;
  void set_from(::google::protobuf::int32 value);

  // optional int32 to = 4;
  void clear_to();
  static const int kToFieldNumber = 4;
  ::google::protobuf::int32 to() const;
  void set_to(::google::protobuf::int32 value);

  // optional string msg = 5;
  void clear_msg();
  static const int kMsgFieldNumber = 5;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:ws_chat_protocol.ws_msg_chat_request)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int32 rid_;
  ::google::protobuf::int32 from_;
  ::google::protobuf::int32 to_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_ws_5fchat_5fprotocol_2eproto_impl();
  friend void  protobuf_AddDesc_ws_5fchat_5fprotocol_2eproto_impl();
  friend void protobuf_AssignDesc_ws_5fchat_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_ws_5fchat_5fprotocol_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ws_msg_chat_request> ws_msg_chat_request_default_instance_;

// -------------------------------------------------------------------

class ws_msg_chat_replay : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ws_chat_protocol.ws_msg_chat_replay) */ {
 public:
  ws_msg_chat_replay();
  virtual ~ws_msg_chat_replay();

  ws_msg_chat_replay(const ws_msg_chat_replay& from);

  inline ws_msg_chat_replay& operator=(const ws_msg_chat_replay& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ws_msg_chat_replay& default_instance();

  static const ws_msg_chat_replay* internal_default_instance();

  void Swap(ws_msg_chat_replay* other);

  // implements Message ----------------------------------------------

  inline ws_msg_chat_replay* New() const { return New(NULL); }

  ws_msg_chat_replay* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ws_msg_chat_replay& from);
  void MergeFrom(const ws_msg_chat_replay& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ws_msg_chat_replay* other);
  void UnsafeMergeFrom(const ws_msg_chat_replay& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 time = 1;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::int64 time() const;
  void set_time(::google::protobuf::int64 value);

  // optional int32 code = 2;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // optional int32 from = 3;
  void clear_from();
  static const int kFromFieldNumber = 3;
  ::google::protobuf::int32 from() const;
  void set_from(::google::protobuf::int32 value);

  // optional string msg = 4;
  void clear_msg();
  static const int kMsgFieldNumber = 4;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:ws_chat_protocol.ws_msg_chat_replay)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int64 time_;
  ::google::protobuf::int32 code_;
  ::google::protobuf::int32 from_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_ws_5fchat_5fprotocol_2eproto_impl();
  friend void  protobuf_AddDesc_ws_5fchat_5fprotocol_2eproto_impl();
  friend void protobuf_AssignDesc_ws_5fchat_5fprotocol_2eproto();
  friend void protobuf_ShutdownFile_ws_5fchat_5fprotocol_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ws_msg_chat_replay> ws_msg_chat_replay_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ws_msg_connected

// optional int64 time = 1;
inline void ws_msg_connected::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ws_msg_connected::time() const {
  // @@protoc_insertion_point(field_get:ws_chat_protocol.ws_msg_connected.time)
  return time_;
}
inline void ws_msg_connected::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:ws_chat_protocol.ws_msg_connected.time)
}

// optional int32 rid = 2;
inline void ws_msg_connected::clear_rid() {
  rid_ = 0;
}
inline ::google::protobuf::int32 ws_msg_connected::rid() const {
  // @@protoc_insertion_point(field_get:ws_chat_protocol.ws_msg_connected.rid)
  return rid_;
}
inline void ws_msg_connected::set_rid(::google::protobuf::int32 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:ws_chat_protocol.ws_msg_connected.rid)
}

// optional int32 uid = 3;
inline void ws_msg_connected::clear_uid() {
  uid_ = 0;
}
inline ::google::protobuf::int32 ws_msg_connected::uid() const {
  // @@protoc_insertion_point(field_get:ws_chat_protocol.ws_msg_connected.uid)
  return uid_;
}
inline void ws_msg_connected::set_uid(::google::protobuf::int32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:ws_chat_protocol.ws_msg_connected.uid)
}

// optional string msg = 4;
inline void ws_msg_connected::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ws_msg_connected::msg() const {
  // @@protoc_insertion_point(field_get:ws_chat_protocol.ws_msg_connected.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ws_msg_connected::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ws_chat_protocol.ws_msg_connected.msg)
}
inline void ws_msg_connected::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ws_chat_protocol.ws_msg_connected.msg)
}
inline void ws_msg_connected::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ws_chat_protocol.ws_msg_connected.msg)
}
inline ::std::string* ws_msg_connected::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:ws_chat_protocol.ws_msg_connected.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ws_msg_connected::release_msg() {
  // @@protoc_insertion_point(field_release:ws_chat_protocol.ws_msg_connected.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ws_msg_connected::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:ws_chat_protocol.ws_msg_connected.msg)
}

inline const ws_msg_connected* ws_msg_connected::internal_default_instance() {
  return &ws_msg_connected_default_instance_.get();
}
// -------------------------------------------------------------------

// ws_msg_error

// optional int64 time = 1;
inline void ws_msg_error::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ws_msg_error::time() const {
  // @@protoc_insertion_point(field_get:ws_chat_protocol.ws_msg_error.time)
  return time_;
}
inline void ws_msg_error::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:ws_chat_protocol.ws_msg_error.time)
}

// optional int32 code = 2;
inline void ws_msg_error::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 ws_msg_error::code() const {
  // @@protoc_insertion_point(field_get:ws_chat_protocol.ws_msg_error.code)
  return code_;
}
inline void ws_msg_error::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:ws_chat_protocol.ws_msg_error.code)
}

// optional string msg = 3;
inline void ws_msg_error::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ws_msg_error::msg() const {
  // @@protoc_insertion_point(field_get:ws_chat_protocol.ws_msg_error.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ws_msg_error::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ws_chat_protocol.ws_msg_error.msg)
}
inline void ws_msg_error::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ws_chat_protocol.ws_msg_error.msg)
}
inline void ws_msg_error::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ws_chat_protocol.ws_msg_error.msg)
}
inline ::std::string* ws_msg_error::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:ws_chat_protocol.ws_msg_error.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ws_msg_error::release_msg() {
  // @@protoc_insertion_point(field_release:ws_chat_protocol.ws_msg_error.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ws_msg_error::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:ws_chat_protocol.ws_msg_error.msg)
}

inline const ws_msg_error* ws_msg_error::internal_default_instance() {
  return &ws_msg_error_default_instance_.get();
}
// -------------------------------------------------------------------

// ws_msg_chat_request

// optional int64 time = 1;
inline void ws_msg_chat_request::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ws_msg_chat_request::time() const {
  // @@protoc_insertion_point(field_get:ws_chat_protocol.ws_msg_chat_request.time)
  return time_;
}
inline void ws_msg_chat_request::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:ws_chat_protocol.ws_msg_chat_request.time)
}

// optional int32 rid = 2;
inline void ws_msg_chat_request::clear_rid() {
  rid_ = 0;
}
inline ::google::protobuf::int32 ws_msg_chat_request::rid() const {
  // @@protoc_insertion_point(field_get:ws_chat_protocol.ws_msg_chat_request.rid)
  return rid_;
}
inline void ws_msg_chat_request::set_rid(::google::protobuf::int32 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:ws_chat_protocol.ws_msg_chat_request.rid)
}

// optional int32 from = 3;
inline void ws_msg_chat_request::clear_from() {
  from_ = 0;
}
inline ::google::protobuf::int32 ws_msg_chat_request::from() const {
  // @@protoc_insertion_point(field_get:ws_chat_protocol.ws_msg_chat_request.from)
  return from_;
}
inline void ws_msg_chat_request::set_from(::google::protobuf::int32 value) {
  
  from_ = value;
  // @@protoc_insertion_point(field_set:ws_chat_protocol.ws_msg_chat_request.from)
}

// optional int32 to = 4;
inline void ws_msg_chat_request::clear_to() {
  to_ = 0;
}
inline ::google::protobuf::int32 ws_msg_chat_request::to() const {
  // @@protoc_insertion_point(field_get:ws_chat_protocol.ws_msg_chat_request.to)
  return to_;
}
inline void ws_msg_chat_request::set_to(::google::protobuf::int32 value) {
  
  to_ = value;
  // @@protoc_insertion_point(field_set:ws_chat_protocol.ws_msg_chat_request.to)
}

// optional string msg = 5;
inline void ws_msg_chat_request::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ws_msg_chat_request::msg() const {
  // @@protoc_insertion_point(field_get:ws_chat_protocol.ws_msg_chat_request.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ws_msg_chat_request::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ws_chat_protocol.ws_msg_chat_request.msg)
}
inline void ws_msg_chat_request::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ws_chat_protocol.ws_msg_chat_request.msg)
}
inline void ws_msg_chat_request::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ws_chat_protocol.ws_msg_chat_request.msg)
}
inline ::std::string* ws_msg_chat_request::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:ws_chat_protocol.ws_msg_chat_request.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ws_msg_chat_request::release_msg() {
  // @@protoc_insertion_point(field_release:ws_chat_protocol.ws_msg_chat_request.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ws_msg_chat_request::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:ws_chat_protocol.ws_msg_chat_request.msg)
}

inline const ws_msg_chat_request* ws_msg_chat_request::internal_default_instance() {
  return &ws_msg_chat_request_default_instance_.get();
}
// -------------------------------------------------------------------

// ws_msg_chat_replay

// optional int64 time = 1;
inline void ws_msg_chat_replay::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ws_msg_chat_replay::time() const {
  // @@protoc_insertion_point(field_get:ws_chat_protocol.ws_msg_chat_replay.time)
  return time_;
}
inline void ws_msg_chat_replay::set_time(::google::protobuf::int64 value) {
  
  time_ = value;
  // @@protoc_insertion_point(field_set:ws_chat_protocol.ws_msg_chat_replay.time)
}

// optional int32 code = 2;
inline void ws_msg_chat_replay::clear_code() {
  code_ = 0;
}
inline ::google::protobuf::int32 ws_msg_chat_replay::code() const {
  // @@protoc_insertion_point(field_get:ws_chat_protocol.ws_msg_chat_replay.code)
  return code_;
}
inline void ws_msg_chat_replay::set_code(::google::protobuf::int32 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:ws_chat_protocol.ws_msg_chat_replay.code)
}

// optional int32 from = 3;
inline void ws_msg_chat_replay::clear_from() {
  from_ = 0;
}
inline ::google::protobuf::int32 ws_msg_chat_replay::from() const {
  // @@protoc_insertion_point(field_get:ws_chat_protocol.ws_msg_chat_replay.from)
  return from_;
}
inline void ws_msg_chat_replay::set_from(::google::protobuf::int32 value) {
  
  from_ = value;
  // @@protoc_insertion_point(field_set:ws_chat_protocol.ws_msg_chat_replay.from)
}

// optional string msg = 4;
inline void ws_msg_chat_replay::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ws_msg_chat_replay::msg() const {
  // @@protoc_insertion_point(field_get:ws_chat_protocol.ws_msg_chat_replay.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ws_msg_chat_replay::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ws_chat_protocol.ws_msg_chat_replay.msg)
}
inline void ws_msg_chat_replay::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ws_chat_protocol.ws_msg_chat_replay.msg)
}
inline void ws_msg_chat_replay::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ws_chat_protocol.ws_msg_chat_replay.msg)
}
inline ::std::string* ws_msg_chat_replay::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:ws_chat_protocol.ws_msg_chat_replay.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ws_msg_chat_replay::release_msg() {
  // @@protoc_insertion_point(field_release:ws_chat_protocol.ws_msg_chat_replay.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ws_msg_chat_replay::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:ws_chat_protocol.ws_msg_chat_replay.msg)
}

inline const ws_msg_chat_replay* ws_msg_chat_replay::internal_default_instance() {
  return &ws_msg_chat_replay_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ws_chat_protocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ws_5fchat_5fprotocol_2eproto__INCLUDED
